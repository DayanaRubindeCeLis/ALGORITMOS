#include <iostream>
#include "conio.h"
#include <iomanip>
using namespace std;
struct matVec{
    int vec[30];
};
void cargar(matVec mat[30][30],int n,int m){
    int i,j,k;
     for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            for(k=0;k<n;k++){
                cout<<"Introducir mat["<<i<<","<<j<<","<<k<<"]:";
                 cin>>mat[i][j].vec[k];
            }
        }
    }
}
void cargarAleatoriamente(matVec mat[30][30],int n,int m){
    int i,j,k;
    for(i=0;i<n;i++){
        for(j=0;j<m;j++){
             for(k=0;k<n;k++){
                mat[i][j].vec[k]=rand()%100;
            }
        }
    }
}
void mostrar(matVec mat[30][30],int n,int m){
    int i,j,k;
    for(i=0;i<n;i++){
         for(j=0;j<m;j++){
            for(k=0;k<n;k++){
                cout<<setw(4)<<mat[i][j].vec[k];
            }
            cout<<" ";
        }
        cout<<endl;
     }
}
void mostrarVector(matVec v[30],int n){
    int i,k;
    cout<<endl<<"La matriz de vectores es:"<<endl;
    for(i=0;i<n;i++){
        for(k=0;k<n;k++){
            cout<<setw(4)<<v[i].vec[k];
         }
        cout<<endl;
    }
}

bool verifPrimo(int n){
    int i,c=0;
    bool ban=true;
    for(i=1;i<=n;i++){
        if(n%i==0){
            c++;
        }
    }
     if(c>2){
        ban=false;
    }
    return(ban);
}

int sumaNoPrimos(matVec mat[30][30],int n,int m){
    int i,j,k,s=0;
    for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            for(k=0;k<n;k++){
                 if(verifPrimo(mat[i][j].vec[k])==false){
                    s=s+mat[i][j].vec[k];
                }
            }
        }
    }
    return(s);
}
bool VerifOrdenado(int v[],int n ){
     int i, k=true;
    for(i=0;i<n-1;i++){
        if(v[i+1]<v[i]){
            k=false;
        }
    }
    return(k);
}
void sumaVect(matVec mat[30][30],matVec v[30],int n, int m){
    int i,j,k,s=0;
     for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            v[i].vec[j]=0;
            if(VerifOrdenado(mat[i][j].vec,n)==true){
            for(k=0;k<n;k++){
                    v[i].vec[j]=v[i].vec[j]+mat[i][j].vec[k];
                 }
            }
        }
    }
}
    

void sumaOrdenados(matVec mat[30][30],matVec v[30],int n, int m){
    int i,j,k,s=0,ban=1;
    for(i=0;i<n;i++){
        for(j=0;j<m;j++){
             v[i].vec[j]=0;
            if(VerifOrdenado(mat[i][j].vec,n)==true){
            for(k=0;k<n;k++){
                v[i].vec[j]=v[i].vec[j]+mat[i][j].vec[k];
                }
                
             }
        }
    }
}

    
void main(){
    matVec mat[30][30],v[30];
    int n,m,x;
    cout<<"Ingresar el numero de filas:";
    cin>>n;
    cout<<"Ingresar el numero de columnas:";
     cin>>m;
    cargarAleatoriamente(mat,n,m);
    mostrar(mat,n,m);
    sumaOrdenados(mat,v,n,m);
    //(sumaVect(mat,v,n,m);
    mostrarVector(v,n);
    //x=sumaNoPrimos(mat,n,m);
    //cout<<"La suma es"<<x;
     getch();
}Enter file contents here
